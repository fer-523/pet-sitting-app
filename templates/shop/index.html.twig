{% extends 'client/dashboard.html.twig' %}

{% block body %}
    <body class="g-sidenav-show bg-gray-100">
    <div class="position-absolute w-100 min-height-300 top-0" style="background-image: url('{{ asset('client/images/bg_1.jpg') }}'); background-position-y: 50%;">
        <span class="mask bg-primary opacity-6"></span>
    </div>

    {% block aside %}
        {{ parent() }}
    {% endblock %}

    <div class="main-content position-relative max-height-vh-100 h-100">
        {% block navbar %}
            {{ parent() }}
        {% endblock %}

        <div class="container-fluid py-4">
            <div class="row mt-4">
                <div class="col-9">
                    <div class="card z-index-2 h-100">
                        <div class="card-header pb-0 pt-3 bg-transparent">
                            <h6 class="text-capitalize">Our Products</h6>
                        </div>
                        <div class="card-body p-3">
                            <div class="row">
                                {% for shop in shops %}
                                    <div class="col-md-3 mb-4">
                                        <div class="card h-100">
                                            <div class="card-header p-0 mx-3 mt-3 position-relative z-index-1">
                                                <a href="javascript:void(0)" class="d-block">
                                                    <img src="{{ asset('uploads/shops/' ~ shop.picture) }}"
                                                         class="img-fluid border-radius-lg" alt="Error">
                                                </a>
                                            </div>
                                            <div class="card-body pt-3 text-center">
                                                <span class="text-gradient text-primary text-uppercase text-xs font-weight-bold my-2">
                                                    {{ shop.price }} TND
                                                </span>
                                                <a href="javascript:void(0)" class="card-title h5 d-block text-dark">
                                                    {{ shop.name }}
                                                </a>
                                                <button
                                                        type="button"
                                                        class="btn btn-primary btn-sm mt-2 add-to-cart-btn"
                                                        data-id="{{ shop.id }}"
                                                        data-name="{{ shop.name }}"
                                                        data-price="{{ shop.price }}">
                                                    Add to Cart
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                {% else %}
                                    <div class="col-12">
                                        <h6 class="text-center">No records found</h6>
                                    </div>
                                {% endfor %}
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-3">
                    <div class="card h-100">
                        <div class="card-header bg-light">
                            <h6 class="text-capitalize">Cart</h6>
                        </div>
                        <div class="card-body">
                            <ul id="product-list" class="list-group mb-3">
                                <!-- Cart items dynamically added -->
                            </ul>
                            <div class="d-flex justify-content-between align-items-center">
                                <strong>Total:</strong>
                                <span id="total-price">0.00 TND</span>
                            </div>
                            <button id="send-btn" class="btn btn-success btn-block mt-3">Send Order</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Hidden CSRF Token -->
    <input type="hidden" id="csrf-token" value="{{ csrf_token('order') }}">

    <!-- Core JS Files -->
    <script src="{{ asset('client/reservation/assets/js/core/popper.min.js') }}"></script>
    <script src="{{ asset('client/reservation/assets/js/core/bootstrap.min.js') }}"></script>
    <script src="{{ asset('client/reservation/assets/js/plugins/perfect-scrollbar.min.js') }}"></script>
    <script src="{{ asset('client/reservation/assets/js/plugins/smooth-scrollbar.min.js') }}"></script>
    <script>
        var win = navigator.platform.indexOf('Win') > -1;
        if (win && document.querySelector('#sidenav-scrollbar')) {
            var options = {
                damping: '0.5'
            }
            Scrollbar.init(document.querySelector('#sidenav-scrollbar'), options);
        }
    </script>

    <!-- Github buttons -->
    <script async defer src="https://buttons.github.io/buttons.js"></script>

    <!-- Control Center for Soft Dashboard -->
    <script src="{{ asset('client/reservation/assets/js/argon-dashboard.min.js?v=2.1.0') }}"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const shopList = document.getElementById('product-list');
            const totalPriceElem = document.getElementById('total-price');
            const sendButton = document.getElementById('send-btn');
            const csrfToken = document.getElementById('csrf-token').value;
            let cart = {};

            // Add shop to cart
            document.querySelectorAll('.add-to-cart-btn').forEach(button => {
                button.addEventListener('click', function () {
                    const shopId = this.getAttribute('data-id');
                    const shopName = this.getAttribute('data-name');
                    const shopPrice = parseFloat(this.getAttribute('data-price'));

                    if (cart[shopId]) {
                        cart[shopId].quantity += 1;
                    } else {
                        cart[shopId] = { name: shopName, price: shopPrice, quantity: 1 };
                    }

                    updateCartDisplay();
                });
            });

            // Update cart display
            function updateCartDisplay() {
                shopList.innerHTML = '';
                let total = 0;

                for (const [id, { name, price, quantity }] of Object.entries(cart)) {
                    const item = document.createElement('li');
                    item.className = 'list-group-item d-flex justify-content-between align-items-center';
                    item.innerHTML = `
                ${name} <span><strong>x</strong>${quantity} <strong>${(price * quantity).toFixed(2)} TND</strong></span>
            `;
                    shopList.appendChild(item);
                    total += price * quantity;
                }

                totalPriceElem.textContent = `${total.toFixed(2)} TND`;
            }

            // Send order to the server
            sendButton.addEventListener('click', function () {
                if (Object.keys(cart).length === 0) {
                    alert('Your cart is empty!');
                    return;
                }

                const orderData = {
                    user_id: {{ app.user.id }}, // Symfony's logged-in user ID
                    price: Object.values(cart).reduce((total, { price, quantity }) => total + price * quantity, 0),
                    status: 'not confirmed',
                    dateOrder: new Date().toISOString(),
                    shops: Object.entries(cart).map(([id, { quantity }]) => ({
                        id: parseInt(id),
                        quantity: quantity,
                    })),
                    _csrf_token: csrfToken,
                };

                fetch('{{ path('orders_new') }}', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-CSRF-Token': csrfToken,
                    },
                    body: JSON.stringify(orderData),
                })
                    .then(response => response.json())
                    .then(data => {
                        console.log('Server response:', data);

                        // Check if the server response contains success
                        if (data.success) {
                            // Redirect to the orders index page
                            window.location.href = data.redirect_url;
                        } else {
                            // Provide feedback if something went wrong
                            alert(data.message || 'An unexpected error occurred.');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('An error occurred while saving the order.');
                    });

            });
        });

    </script>
    </body>
{% endblock %}
